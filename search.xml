<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu常用命令</title>
      <link href="/hexoBlog/2020/09/02/ubuntu-chang-yong-ming-ling/"/>
      <url>/hexoBlog/2020/09/02/ubuntu-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><pre><code>uname -a               # 查看内核/操作系统/CPU信息 head -n 1 /etc/issue   # 查看操作系统版本 cat /proc/cpuinfo      # 查看CPU信息 hostname               # 查看计算机名 lspci -tv              # 列出所有PCI设备 lsusb -tv              # 列出所有USB设备 lsmod                  # 列出加载的内核模块 env                    # 查看环境变量</code></pre><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><pre><code> free -m                # 查看内存使用量和交换区使用量 df -h                  # 查看各分区使用情况 du -sh &lt;目录名&gt;         # 查看指定目录的大小 grep MemTotal /proc/meminfo   # 查看内存总量 grep MemFree /proc/meminfo    # 查看空闲内存量 uptime                 # 查看系统运行时间、用户数、负载 cat /proc/loadavg      # 查看系统负载</code></pre><h2 id="磁盘和分区"><a href="#磁盘和分区" class="headerlink" title="磁盘和分区"></a>磁盘和分区</h2><pre><code> mount | column -t      # 查看挂接的分区状态 fdisk -l               # 查看所有分区 swapon -s              # 查看所有交换分区 hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备) dmesg | grep IDE       # 查看启动时IDE设备检测状况</code></pre><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><pre><code> ifconfig               # 查看所有网络接口的属性 iptables -L            # 查看防火墙设置 route -n               # 查看路由表 netstat -lntp          # 查看所有监听端口 netstat -antp          # 查看所有已经建立的连接 netstat -s             # 查看网络统计信息</code></pre><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><pre><code> ps -ef                 # 查看所有进程 top                    # 实时显示进程状态</code></pre><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><pre><code> w                      # 查看活动用户 id &lt;用户名&gt;             # 查看指定用户信息 last                    # 查看用户登录日志 cut -d: -f1 /etc/passwd   # 查看系统所有用户 cut -d: -f1 /etc/group    # 查看系统所有组 crontab -l             # 查看当前用户的计划任务</code></pre><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><pre><code> chkconfig --list       # 列出所有系统服务 chkconfig --list | grep on    # 列出所有启动的系统服务</code></pre><h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><pre><code> apt-get update——在修改/etc/apt/sources.list或者/etc/apt/preferences之后运行该命令。此外您需要定期运行这一命令以确保您的软件包列表是最新的。  apt-get install packagename——安装一个新软件包（参见下文的aptitude）  apt-get remove packagename——卸载一个已安装的软件包（保留配置文件）  apt-get --purge remove packagename——卸载一个已安装的软件包（删除配置文件）  dpkg --force-all --purge packagename 有些软件很难卸载，而且还阻止了别的软件的应用，就可以用这个，不过有点冒险。  apt-get autoclean apt会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件  apt-get clean 这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的。  apt-get upgrade——更新所有已安装的软件包  apt-get dist-upgrade——将系统升级到新版本  apt-cache search string——在软件包列表中搜索字符串  dpkg -l package-name-pattern——列出所有与模式相匹配的软件包。如果您不知道软件包的全名，您可以使用“*package-name-pattern*”。  aptitude——详细查看已安装或可用的软件包。与apt-get类似，aptitude可以通过命令行方式调用，但仅限于某些命令——最常见的有安装和卸载命令。由于aptitude比apt-get了解更多信息，可以说它更适合用来进行安装和卸载。  apt-cache showpkg pkgs——显示软件包信息。  apt-cache dumpavail——打印可用软件包列表。  apt-cache show pkgs——显示软件包记录，类似于dpkg –print-avail。  apt-cache pkgnames——打印软件包列表中所有软件包的名称。  dpkg -S file——这个文件属于哪个已安装软件包。  dpkg -L package——列出软件包中的所有文件。  apt-file search filename——查找包含特定文件的软件包（不一定是已安装的），这些文件的文件名中含有指定的字符串。apt-file是一个独立的软件包。您必须 先使用apt-get install来安装它，然后运行apt-file update。如果apt-file search filename输出的内容太多，您可以尝试使用apt-file search filename | grep -w filename（只显示指定字符串作为完整的单词出现在其中的那些文件名）或者类似方法，例如：apt-file search filename | grep /bin/（只显示位于诸如/bin或/usr/bin这些文件夹中的文件，如果您要查找的是某个特定的执行文件的话，这样做是有帮助的）。</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lunix </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABP VNext学习</title>
      <link href="/hexoBlog/2020/07/22/abp-vnext-xue-xi/"/>
      <url>/hexoBlog/2020/07/22/abp-vnext-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="ABP-VNext"><a href="#ABP-VNext" class="headerlink" title="ABP VNext"></a>ABP VNext</h1><h2 id="ABP-VNext介绍"><a href="#ABP-VNext介绍" class="headerlink" title="ABP VNext介绍"></a>ABP VNext介绍</h2><blockquote><p>ABP VNext是一个ASP.NET Bolierplate 的ASP.NET Core版本，是遵循简洁架构，模块化/插件化设计等多种最佳实践模式的一套web应用程序快速开发套件。</p></blockquote><table><thead><tr><th align="left">特点</th></tr></thead><tbody><tr><td align="left">面向DDD的架构分层设计</td></tr><tr><td align="left">HTTP APIs&amp;动态代理</td></tr><tr><td align="left">模块化设计&amp;微服务兼容</td></tr><tr><td align="left">模切关注点（授权，验证，异常处理，缓存，审计日志，事务管理…）</td></tr><tr><td align="left">虚拟文件系统</td></tr><tr><td align="left">主题与皮肤支持</td></tr><tr><td align="left">多租户支持</td></tr></tbody></table><h2 id="ABP-Vnext相关资料"><a href="#ABP-Vnext相关资料" class="headerlink" title="ABP Vnext相关资料"></a>ABP Vnext相关资料</h2><p><a href="https://abp.io/" target="_blank" rel="noopener">官网</a><br><a href="https://docs.abp.io/zh-hans/abp/latest/" target="_blank" rel="noopener">文档</a><br><a href="https://github.com/abpframework/abp" target="_blank" rel="noopener">源码</a><br><a href="https://github.com/EasyAbp" target="_blank" rel="noopener">ABP国内小组</a></p><h2 id="ABP的模块化"><a href="#ABP的模块化" class="headerlink" title="ABP的模块化"></a>ABP的模块化</h2><h3 id="什么是模块？"><a href="#什么是模块？" class="headerlink" title="什么是模块？"></a>什么是模块？</h3><blockquote><p>在我们生活中导出都可以看到模块化设计的例子，比如汽车，电脑，家具都是由一些零件组合成小部件，然后在由这些小部件组合成模块，再由模块组合成成品。这些部件可以更换、添加、移除而不影响整体设计。</p></blockquote><ul><li>组件: Component<br>组件是软件的部署单元，是整个软件系统在部署过程中可以独立完成部署的最小实体。对于Java来说是一个jar文件，在.NET中是DLL文件。 </li><li>模块: Module<br>偏向于设计的概念，用于在项目中划分相对独立的功能，或许有时候，模块本身就要引用多个组件。</li></ul><h3 id="模块VS组件"><a href="#模块VS组件" class="headerlink" title="模块VS组件"></a>模块VS组件</h3><blockquote><p>模块化是指将软件划分成独立命名且可以独立访问的模块，不同的模块通常具有不同的功能或  职责。每个模块都具有可以独立开发、测试，最后组装成完整的软件。<br> 零件 = 类<br> 小部件 = 组件<br> 模块 = 模块</p></blockquote><h3 id="为什么要模块化"><a href="#为什么要模块化" class="headerlink" title="为什么要模块化"></a>为什么要模块化</h3><blockquote><p>耦合度高<br>代码难以理解<br>难以重构和修改<br>很难重用</p></blockquote><h3 id="ABP模块示例"><a href="#ABP模块示例" class="headerlink" title="ABP模块示例"></a>ABP模块示例</h3><blockquote><p>通过入口方法将模块内的服务注入到全局的DI容器<br>通过Application 来加载启动模块<br>1.提供application 来接替整个应用程序的生命周期 启动和初始化、卸载<br>2.提供模块化封装模块本身的行为和依赖<br>3.通过模块将模块内的行为与依赖注入到全局application的DI容器</p></blockquote><h2 id="ABP的分层架构"><a href="#ABP的分层架构" class="headerlink" title="ABP的分层架构"></a>ABP的分层架构</h2><h3 id="DDD的基本介绍"><a href="#DDD的基本介绍" class="headerlink" title="DDD的基本介绍"></a>DDD的基本介绍</h3><blockquote><p>Domain-Driven Design领域驱动设计</p><blockquote><p>以一种领域专家、设计人员、开发人员都能理解的通用语言作为相互交流的工具，在交流的过程中发现领域概念，然后将这些概念设计成一个领域模型；<br>由领域模型驱动软件设计，用代码来实现该领域模型；</p><p><img src="C:%5CUsers%5CQHBZY%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200723174855966.png" alt="image-20200723174855966"></p></blockquote></blockquote><h3 id="DDD的分层架构"><a href="#DDD的分层架构" class="headerlink" title="DDD的分层架构"></a>DDD的分层架构</h3><h3 id="一个DDD的Demo"><a href="#一个DDD的Demo" class="headerlink" title="一个DDD的Demo"></a>一个DDD的Demo</h3><h3 id="简洁架构"><a href="#简洁架构" class="headerlink" title="简洁架构"></a>简洁架构</h3><h3 id="ABP框架推荐的分层架构-DDD的应用"><a href="#ABP框架推荐的分层架构-DDD的应用" class="headerlink" title="ABP框架推荐的分层架构/DDD的应用"></a>ABP框架推荐的分层架构/DDD的应用</h3><h3 id="改良版本的ABP分层架构"><a href="#改良版本的ABP分层架构" class="headerlink" title="改良版本的ABP分层架构"></a>改良版本的ABP分层架构</h3><h2 id="ABP的使用经验串讲"><a href="#ABP的使用经验串讲" class="headerlink" title="ABP的使用经验串讲"></a>ABP的使用经验串讲</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ABP </category>
          
          <category> 学习教程 </category>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ABP VNext </tag>
            
            <tag> Asp.Net.Core </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Code First Migration 迁移基本指令</title>
      <link href="/hexoBlog/2020/07/13/code-first-migration-qian-yi-ji-ben-zhi-ling/"/>
      <url>/hexoBlog/2020/07/13/code-first-migration-qian-yi-ji-ben-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="Code-First-Migration-迁移基本指令"><a href="#Code-First-Migration-迁移基本指令" class="headerlink" title="Code First Migration 迁移基本指令"></a>Code First Migration 迁移基本指令</h1><h2 id="启用Migration"><a href="#启用Migration" class="headerlink" title="启用Migration"></a>启用Migration</h2><pre><code> enable-migrations</code></pre><h2 id="更新数据库，添加Migration执行文件"><a href="#更新数据库，添加Migration执行文件" class="headerlink" title="更新数据库，添加Migration执行文件"></a>更新数据库，添加Migration执行文件</h2><pre><code> add-migration &#39;Createdb&#39;</code></pre><h2 id="更新数据库"><a href="#更新数据库" class="headerlink" title="更新数据库"></a>更新数据库</h2><pre><code> update-database</code></pre><h2 id="恢复初始"><a href="#恢复初始" class="headerlink" title="恢复初始"></a>恢复初始</h2><pre><code> Update-Database -Migration:0</code></pre><h2 id="回溯数据库"><a href="#回溯数据库" class="headerlink" title="回溯数据库"></a>回溯数据库</h2><pre><code> Update-Database –TargetMigration: TargetMigrationName</code></pre>]]></content>
      
      
      <categories>
          
          <category> ORM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeFirst </tag>
            
            <tag> EF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle表空间处理</title>
      <link href="/hexoBlog/2020/07/08/oracle-biao-kong-jian-chu-li/"/>
      <url>/hexoBlog/2020/07/08/oracle-biao-kong-jian-chu-li/</url>
      
        <content type="html"><![CDATA[<h1 id="Oracle表空间处理"><a href="#Oracle表空间处理" class="headerlink" title="Oracle表空间处理"></a>Oracle表空间处理</h1><h2 id="一、查询表空间数据使用情况"><a href="#一、查询表空间数据使用情况" class="headerlink" title="一、查询表空间数据使用情况"></a>一、查询表空间数据使用情况</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>     UPPER<span class="token punctuation">(</span>F<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">)</span> <span class="token string">"表空间名"</span><span class="token punctuation">,</span>     D<span class="token punctuation">.</span>TOT_GROOTTE_MB <span class="token string">"表空间大小(M)"</span><span class="token punctuation">,</span>     D<span class="token punctuation">.</span>TOT_GROOTTE_MB <span class="token operator">-</span> F<span class="token punctuation">.</span>TOTAL_BYTES <span class="token string">"已使用空间(M)"</span><span class="token punctuation">,</span>     TO_CHAR <span class="token punctuation">(</span>         <span class="token function">ROUND</span><span class="token punctuation">(</span>             <span class="token punctuation">(</span>                 D<span class="token punctuation">.</span>TOT_GROOTTE_MB <span class="token operator">-</span> F<span class="token punctuation">.</span>TOTAL_BYTES             <span class="token punctuation">)</span> <span class="token operator">/</span> D<span class="token punctuation">.</span>TOT_GROOTTE_MB <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span>             <span class="token number">2</span>         <span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token string">'990.99'</span>     <span class="token punctuation">)</span> <span class="token string">"使用比"</span><span class="token punctuation">,</span>     F<span class="token punctuation">.</span>TOTAL_BYTES <span class="token string">"空闲空间(M)"</span><span class="token punctuation">,</span>     F<span class="token punctuation">.</span>MAX_BYTES <span class="token string">"最大块(M)"</span> <span class="token keyword">FROM</span>     <span class="token punctuation">(</span>         <span class="token keyword">SELECT</span>             TABLESPACE_NAME<span class="token punctuation">,</span>             <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>BYTES<span class="token punctuation">)</span> <span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> TOTAL_BYTES<span class="token punctuation">,</span>             <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">MAX</span><span class="token punctuation">(</span>BYTES<span class="token punctuation">)</span> <span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> MAX_BYTES         <span class="token keyword">FROM</span>             SYS<span class="token punctuation">.</span>DBA_FREE_SPACE         <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>             TABLESPACE_NAME     <span class="token punctuation">)</span> F<span class="token punctuation">,</span>     <span class="token punctuation">(</span>         <span class="token keyword">SELECT</span>             DD<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">,</span>             <span class="token function">ROUND</span><span class="token punctuation">(</span>                 <span class="token function">SUM</span><span class="token punctuation">(</span>DD<span class="token punctuation">.</span>BYTES<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                 <span class="token number">2</span>             <span class="token punctuation">)</span> TOT_GROOTTE_MB         <span class="token keyword">FROM</span>             SYS<span class="token punctuation">.</span>DBA_DATA_FILES DD         <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>             DD<span class="token punctuation">.</span>TABLESPACE_NAME     <span class="token punctuation">)</span> D <span class="token keyword">WHERE</span>     D<span class="token punctuation">.</span>TABLESPACE_NAME <span class="token operator">=</span> F<span class="token punctuation">.</span>TABLESPACE_NAME <span class="token keyword">ORDER</span> <span class="token keyword">BY</span>     <span class="token number">4</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span></code></pre><h2 id="二、查询表空间文件"><a href="#二、查询表空间文件" class="headerlink" title="二、查询表空间文件"></a>二、查询表空间文件</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>     B<span class="token punctuation">.</span>FILE_NAME 物理文件名<span class="token punctuation">,</span>     B<span class="token punctuation">.</span>TABLESPACE_NAME 表空间<span class="token punctuation">,</span>     B<span class="token punctuation">.</span>BYTES <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> 大小M<span class="token punctuation">,</span>     <span class="token punctuation">(</span>         B<span class="token punctuation">.</span>BYTES <span class="token operator">-</span> <span class="token function">SUM</span><span class="token punctuation">(</span>NVL<span class="token punctuation">(</span>A<span class="token punctuation">.</span>BYTES<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> 已使用M<span class="token punctuation">,</span>     SUBSTR<span class="token punctuation">(</span>         <span class="token punctuation">(</span>             B<span class="token punctuation">.</span>BYTES <span class="token operator">-</span> <span class="token function">SUM</span><span class="token punctuation">(</span>NVL<span class="token punctuation">(</span>A<span class="token punctuation">.</span>BYTES<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>B<span class="token punctuation">.</span>BYTES<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span>         <span class="token number">1</span><span class="token punctuation">,</span>         <span class="token number">5</span>     <span class="token punctuation">)</span> 利用率 <span class="token keyword">FROM</span>     DBA_FREE_SPACE A<span class="token punctuation">,</span>     DBA_DATA_FILES B <span class="token keyword">WHERE</span>     A<span class="token punctuation">.</span>FILE_ID <span class="token operator">=</span> B<span class="token punctuation">.</span>FILE_ID <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>     B<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">,</span>     B<span class="token punctuation">.</span>FILE_NAME<span class="token punctuation">,</span>     B<span class="token punctuation">.</span>BYTES <span class="token keyword">ORDER</span> <span class="token keyword">BY</span>     B<span class="token punctuation">.</span>TABLESPACE_NAME</code></pre><h2 id="三、简单处理办法表空间不足"><a href="#三、简单处理办法表空间不足" class="headerlink" title="三、简单处理办法表空间不足"></a>三、简单处理办法表空间不足</h2><ul><li><blockquote><p>设表空间自增长</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span>  DATAFILE <span class="token string">'D:\oradata\orcl\users01.dbf'</span> AUTOEXTEND  <span class="token keyword">ON</span> <span class="token keyword">NEXT</span> 500M MAXSIZE UNLIMITED</code></pre></li><li><blockquote><p>创建新的表空间文件</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLESPACE</span> USERS <span class="token keyword">ADD</span> DATAFILE <span class="token string">'/ora_data/orcl/users02.dbf'</span> SIZE 50M AUTOEXTEND <span class="token keyword">ON</span> <span class="token keyword">NEXT</span> 5M MAXSIZE 100M<span class="token punctuation">;</span></code></pre></li></ul><h2 id="四、一劳永逸处理表空间不足"><a href="#四、一劳永逸处理表空间不足" class="headerlink" title="四、一劳永逸处理表空间不足"></a>四、一劳永逸处理表空间不足</h2><ul><li><blockquote><p>oracle数据文件最大32G，当不足时让人需要人为创建表空间文件<br>创建存储过程，使用率超过90%则进行新增表文件创建<br>该方法从别的地方借鉴，原地址已遗忘，还没试过，mark一下</p></blockquote></li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token operator">OR</span> REPLACE <span class="token keyword">PROCEDURE</span> prc_job_auto_add_datafile <span class="token operator">IS</span> all_file_name varchar2 <span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tablespace_all varchar2 <span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> vs_sql varchar2 <span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> filecount varchar2 <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> relativepath varchar2 <span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">CURSOR</span> c_tablespace <span class="token operator">IS</span> <span class="token keyword">SELECT</span>     tablespace_name<span class="token punctuation">,</span>     Total_MB<span class="token punctuation">,</span>     Used_MB<span class="token punctuation">,</span>     <span class="token function">Round</span><span class="token punctuation">(</span>Used_MB <span class="token operator">/</span> Total_MB <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> User_Pct <span class="token keyword">FROM</span>     <span class="token punctuation">(</span>         <span class="token keyword">SELECT</span>             tablespace_name<span class="token punctuation">,</span>             <span class="token function">Round</span><span class="token punctuation">(</span><span class="token function">Sum</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Used_MB<span class="token punctuation">,</span>             <span class="token function">Round</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>maxbytes<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Total_MB         <span class="token keyword">FROM</span>             dba_data_files         <span class="token keyword">WHERE</span>             tablespace_name <span class="token operator">&lt;></span> <span class="token string">'SYSAUX'</span>         <span class="token operator">AND</span> tablespace_name <span class="token operator">&lt;></span> <span class="token string">'USERS'</span>         <span class="token operator">AND</span> tablespace_name <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">'UNDOTBS%'</span>         <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>             tablespace_name     <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">BEGIN</span>     relativepath :<span class="token operator">=</span> <span class="token string">'D:\app\Administrator\oradata\orcl\'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--云中心：+DATA/zhsw/datafile/  153：D:\app\Administrator\oradata\orcl\</span>    <span class="token keyword">for</span> tablespace_all <span class="token operator">in</span> c_tablespace  loop          <span class="token keyword">If</span> tablespace_all<span class="token punctuation">.</span>User_Pct <span class="token operator">>=</span><span class="token number">90</span> <span class="token keyword">Then</span>              all_file_name :<span class="token operator">=</span>  relativepath<span class="token operator">||</span> tablespace_all<span class="token punctuation">.</span>tablespace_name<span class="token punctuation">;</span>              <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span> <span class="token keyword">into</span> filecount <span class="token keyword">from</span> dba_data_files <span class="token keyword">where</span> tablespace_name<span class="token operator">=</span>tablespace_all<span class="token punctuation">.</span>tablespace_name<span class="token punctuation">;</span>              <span class="token keyword">if</span> filecount<span class="token operator">&lt;=</span><span class="token number">9</span> <span class="token keyword">then</span>                filecount:<span class="token operator">=</span><span class="token string">' 0 '</span><span class="token operator">||</span>filecount<span class="token punctuation">;</span>              <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>              all_file_name :<span class="token operator">=</span> all_file_name<span class="token operator">||</span>filecount<span class="token operator">||</span><span class="token string">'.dbf '</span><span class="token punctuation">;</span>              vs_sql :<span class="token operator">=</span> <span class="token string">' ALTER TABLESPACE '</span><span class="token operator">||</span>tablespace_all<span class="token punctuation">.</span>tablespace_name<span class="token operator">||</span><span class="token string">' ADD datafile '</span><span class="token string">''</span><span class="token operator">||</span>all_file_name<span class="token operator">||</span><span class="token string">''</span><span class="token string">' SIZE 1024M AUTOEXTEND ON NEXT 200M MAXSIZE UNLIMITED '</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">--dbms_output.put_line(vs_sql);</span>              <span class="token keyword">Execute</span> Immediate vs_sql<span class="token punctuation">;</span>         <span class="token keyword">End</span> <span class="token keyword">If</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> loop<span class="token punctuation">;</span>  exception    <span class="token keyword">when</span> others <span class="token keyword">then</span>      dbms_output<span class="token punctuation">.</span>put_line<span class="token punctuation">(</span>sqlerrm<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">End</span> prc_job_auto_add_datafile<span class="token punctuation">;</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle空表导出办法</title>
      <link href="/hexoBlog/2020/07/08/oracle-kong-biao-dao-chu-ban-fa/"/>
      <url>/hexoBlog/2020/07/08/oracle-kong-biao-dao-chu-ban-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="Oracle空表导出办法"><a href="#Oracle空表导出办法" class="headerlink" title="Oracle空表导出办法"></a>Oracle空表导出办法</h3><ul><li>执行下面语句，再将生成的语句全部执行</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token string">'alter table '</span><span class="token operator">||</span>table_name<span class="token operator">||</span><span class="token string">' allocate extent;'</span> <span class="token keyword">from</span> user_tables <span class="token keyword">where</span> num_rows<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/hexoBlog/2020/07/08/markdown-yu-fa/"/>
      <url>/hexoBlog/2020/07/08/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><h3 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h3><p>记不住的时候看两眼。</p><h3 id="一-标题"><a href="#一-标题" class="headerlink" title="一.标题"></a>一.标题</h3><ul><li><p>类型一：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题</span><span class="token title important"><span class="token punctuation">##</span> 二级标题</span><span class="token title important"><span class="token punctuation">###</span> 三级标题</span><span class="token title important"><span class="token punctuation">####</span> 四级标题</span><span class="token title important"><span class="token punctuation">#####</span> 五级标题</span><span class="token title important"><span class="token punctuation">######</span> 六级标题</span></code></pre></li><li><p>类型二：</p><pre class=" language-markdown"><code class="language-markdown">一级标题========二级标题<span class="token hr punctuation">--------</span></code></pre></li></ul><h3 id="二-列表"><a href="#二-列表" class="headerlink" title="二.列表"></a>二.列表</h3><ul><li>无序列表<pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 1<span class="token list punctuation">*</span> 2<span class="token list punctuation">*</span> 3<span class="token list punctuation">+</span> 1<span class="token list punctuation">+</span> 2<span class="token list punctuation">+</span> 3<span class="token list punctuation">-</span> 1<span class="token list punctuation">-</span> 2<span class="token list punctuation">-</span> 3</code></pre></li><li>有序列表<pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 列表1<span class="token list punctuation">2.</span> 列表1<span class="token list punctuation">3.</span> 列表1</code></pre></li></ul><h3 id="三-区块引用"><a href="#三-区块引用" class="headerlink" title="三.区块引用"></a>三.区块引用</h3><ul><li><p>普通区块</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 我是一个区块</code></pre><blockquote><p>我是一个区块</p></blockquote></li><li><p>语句区块</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> <span class="token title important"><span class="token punctuation">##</span> 标题</span><span class="token blockquote punctuation">></span> <span class="token list punctuation">*</span> 什么是区块<span class="token blockquote punctuation">>   ></span> 这就是区块</code></pre></li><li><p>嵌套区块引用</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>一级引用<span class="token blockquote punctuation">>></span>二级引用<span class="token blockquote punctuation">>>></span>三级引用<span class="token blockquote punctuation">>>>></span>四级引用</code></pre><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p><blockquote><p>四级引用</p></blockquote></blockquote></blockquote></blockquote></li></ul><h3 id="四-段落"><a href="#四-段落" class="headerlink" title="四.段落"></a>四.段落</h3><ul><li><p>字体</p><pre class=" language-markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span>斜体<span class="token punctuation">*</span></span><span class="token italic"><span class="token punctuation">_</span>斜体<span class="token punctuation">_</span></span><span class="token bold"><span class="token punctuation">**</span>粗体<span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">__</span>粗体<span class="token punctuation">__</span></span><span class="token bold"><span class="token punctuation">**</span>*斜粗体<span class="token punctuation">**</span></span>*<span class="token bold"><span class="token punctuation">__</span>_斜粗体<span class="token punctuation">__</span></span>_</code></pre></li><li><p>分隔线</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">***</span><span class="token hr punctuation">******</span><span class="token hr punctuation">---</span><span class="token hr punctuation">- - -</span><span class="token hr punctuation">* * *</span><span class="token italic"><span class="token punctuation">_</span> <span class="token punctuation">_</span></span> _ <span class="token bold"><span class="token punctuation">__</span><span class="token punctuation">__</span>_</span></code></pre></li><li><p>删除线</p><pre class=" language-markdown"><code class="language-markdown">~~我被删了</code></pre></li><li><p>注脚</p><pre class=" language-markdown"><code class="language-markdown">[^要标注的文本]</code></pre><p>例：<br>我是主角<a href="龙傲天就是我">^1</a></p></li></ul><h3 id="五-链接"><a href="#五-链接" class="headerlink" title="五.链接"></a>五.链接</h3><ul><li><p>行内式</p><pre><code>[百度](http://www.baidu.com)一下,我就知道</code></pre><p><a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a>一下,我就知道</p></li><li><p>带链接的列表</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> <span class="token url">[百度](http://www.baidu.com)</span>一下,我就知道<span class="token list punctuation">*</span> <span class="token url">[有道](http://fanyi.youdao.com)</span>翻译</code></pre></li></ul><blockquote><ul><li><a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a>一下,我就知道</li><li><a href="http://fanyi.youdao.com" target="_blank" rel="noopener">有道</a>翻译</li></ul></blockquote><h3 id="六-图片"><a href="#六-图片" class="headerlink" title="六.图片"></a>六.图片</h3><pre class=" language-markdown"><code class="language-markdown"> ![我是图片]（https://www.cnblogs.com/images/logo_small.gif) [博客园]:https://www.cnblogs.com/images/logo_small.gif 参数式，这里是<span class="token url">![博客园][<span class="token variable">博客园</span>]</span></code></pre><p><img src="https://www.cnblogs.com/images/logo_small.gif" alt="我是图片"></p><p>参数式，这里是<a href="https://www.cnblogs.com/images/logo_small.gif" target="_blank" rel="noopener">博客园</a></p><h3 id="七-代码框"><a href="#七-代码框" class="headerlink" title="七.代码框"></a>七.代码框</h3><ul><li><p>单行</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">`&lt;h1 title="我是H1">我是一个H1，大大的H1&lt;/h1>`</span></code></pre><p><code>&lt;h1 title="我是H1"&gt;我是一个H1，大大的H1&lt;/h1&gt;</code></p></li><li><p>多行</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>我是H1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是一个H1，大大的H1 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>我是H2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是一个H2，比H1小点 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></code></pre></li></ul><h3 id="八-表格"><a href="#八-表格" class="headerlink" title="八.表格"></a>八.表格</h3><pre class=" language-markdown"><code class="language-markdown">| 左对齐 |居中 |右对齐||:----|:----:|----:|| 单元格|单元格|单元格|| 单元格|单元格|单元格|</code></pre><table><thead><tr><th align="left">左对齐</th><th align="center">居中</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr></tbody></table><h3 id="九-流程图"><a href="#九-流程图" class="headerlink" title="九.流程图"></a>九.流程图</h3><ul><li>横向<pre class=" language-mermaid"><code class="language-mermaid">graph LRA[方形] -->B(圆角)  B --> C{条件a}  C -->|a=1| D[结果1]  C -->|a=2| E[结果2]  F[横向流程图]</code></pre></li></ul><ul><li><p>纵向</p><pre class=" language-mermaid"><code class="language-mermaid">graph TDA[方形] --> B(圆角)  B --> C{条件a}  C --> |a=1| D[结果1]  C --> |a=2| E[结果2]  F[竖向流程图]</code></pre></li><li><p>标准流程图格式</p><pre class=" language-flow"><code class="language-flow">st=>start: 开始框op=>operation: 处理框cond=>condition: 判断框(是或否?)sub1=>subroutine: 子流程io=>inputoutput: 输入输出框e=>end: 结束框st->op->condcond(yes)->io->econd(yes)->io->econd(no)->sub1(right)->op</code></pre></li><li><p>标准流程图（横向）</p><pre class=" language-flow"><code class="language-flow">st=>start: 开始框op=>operation: 处理框cond=>condition: 判断框(是或否?)sub1=>subroutine: 子流程io=>inputoutput: 输入输出框e=>end: 结束框st(right)->op(right)->condcond(yes)->io(bottom)->econd(no)->sub1(right)->op</code></pre></li><li><p>UML时序图源码样例</p><pre class=" language-sequence"><code class="language-sequence">对象A->对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B-->对象A: 我很好(响应)对象A->对象B: 你真的好吗？</code></pre></li><li><p>UML时序图源码复杂样例：</p><pre class=" language-sequence"><code class="language-sequence">Title: 标题：复杂使用对象A->对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B-->对象A: 我很好(响应)对象B->小三: 你好吗小三-->>对象A: 对象B找我了对象A->对象B: 你真的好吗？Note over 小三,对象B: 我们是朋友participant CNote right of C: 没人陪我玩</code></pre></li><li><p>UML标准时序图样例：</p><pre class=" language-mermaid"><code class="language-mermaid">%% 时序图例子,-> 直线，-->虚线，->>实线箭头sequenceDiagram  participant 张三  participant 李四  张三->王五: 王五你好吗？  loop 健康检查      王五->王五: 与疾病战斗  end  Note right of 王五: 合理 食物 <br/>看医生...  李四-->>张三: 很好!  王五->李四: 你怎么样?  李四-->王五: 很好!</code></pre></li><li><p>甘特图样例</p><pre class=" language-mermaid"><code class="language-mermaid">%% 语法示例      gantt      dateFormat  YYYY-MM-DD      title 软件开发甘特图      section 设计      需求                      :done,    des1, 2014-01-06,2014-01-08      原型                      :active,  des2, 2014-01-09, 3d      UI设计                     :         des3, after des2, 5d  未来任务                     :         des4, after des3, 5d      section 开发      学习准备理解需求                      :crit, done, 2014-01-06,24h      设计框架                             :crit, done, after des2, 2d      开发                                 :crit, active, 3d      未来任务                              :crit, 5d      耍                                   :2d      section 测试      功能测试                              :active, a1, after des3, 3d      压力测试                               :after a1  , 20h      测试报告                               : 48h</code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
          <category> 学习教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hexoBlog/2020/07/07/hello-world/"/>
      <url>/hexoBlog/2020/07/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
